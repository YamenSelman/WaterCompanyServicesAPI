@model RequestVM

@{
    ViewData["Title"] = "Request Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="card text-white container py-2 m-auto mainCard">
    <div class="card-body text-center">
        <div class="bg-white bg-opacity-50 rounded-pill p-1 fs-2">
            <h2 class="fw-bold text-dark">Request Details</h2>
        </div>
        <form method="post" asp-action="ProcessRequest">
            <div class="card-body px-5 text-center">
                <div class="row text-center rounded-3 m-auto">
                    <h5 class="bg-dark bg-opacity-10 m-auto border border-dark rounded shadow py-3 px-1 text-white text-opacity-75 my-3">
                        Request
                    </h5>
                    <div class="text-start row fs-3">
                        <div class="col-6">
                            @Html.LabelFor(modelItem => Model.Request.Id,new {@class = "text-uppercase fs-4 text-white text-opacity-75 fw-bold"})
                        </div>
                        <div class="col-6">
                            @Html.EditorFor(modelItem => Model.Request.Id,  new { htmlAttributes = new { @class = "form-control text-center", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="text-start row fs-3">
                        <div class="col-6">
                            @Html.LabelFor(modelItem => Model.Request.RequestDate,new {@class = "text-uppercase fs-4 text-white text-opacity-75 fw-bold"})
                        </div>
                        <div class="col-6">
                            @{string reqdate = Model.Request.RequestDate.ToString("dd/MM/yyyy");}
                            <label class="form-control text-center">@reqdate</label>
                        </div>
                    </div>
                    <div class="text-start row fs-3">
                        <div class="col-6">
                            @Html.LabelFor(modelItem => Model.Request.RequestType,new {@class = "text-uppercase fs-4 text-white text-opacity-75 fw-bold"})
                        </div>
                        <div class="col-6">
                            @Html.EditorFor(modelItem => Model.Request.RequestType,  new { htmlAttributes = new { @class = "form-control text-center",  @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
                <div class="row text-center rounded-3 m-auto">
                    <h5 class="bg-dark bg-opacity-10 m-auto border border-dark rounded shadow py-3 px-1 text-white text-opacity-75 my-3">
                        Subscription
                    </h5>
                    <div class="text-start row fs-3">
                        <div class="col-6">
                            @Html.LabelFor(modelItem => Model.Request.Subscription.ConsumerBarCode,new {@class = "text-uppercase fs-4 text-white text-opacity-75 fw-bold"})
                        </div>
                        <div class="col-6">
                            @Html.EditorFor(modelItem => Model.Request.Subscription.ConsumerBarCode,  new { htmlAttributes = new { @class = "form-control text-center",  @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="text-start row fs-3">
                        <div class="col-6">
                            @Html.LabelFor(modelItem => Model.Request.Subscription.ConsumerSubscriptionNo,new {@class = "text-uppercase fs-4 text-white text-opacity-75 fw-bold"})
                        </div>
                        <div class="col-6">
                            @Html.EditorFor(modelItem => Model.Request.Subscription.ConsumerSubscriptionNo,  new { htmlAttributes = new { @class = "form-control text-center",  @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="text-start row fs-3">
                        <div class="col-6">
                            @Html.LabelFor(modelItem => Model.Request.Subscription.SubscriptionAddress,new {@class = "text-uppercase fs-4 text-white text-opacity-75 fw-bold"})
                        </div>
                        <div class="col-6">
                            @Html.EditorFor(modelItem => Model.Request.Subscription.SubscriptionAddress,  new { htmlAttributes = new { @class = "form-control text-center",  @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
                <div class="row text-center rounded-3 m-auto">
                    <h5 class="bg-dark bg-opacity-10 m-auto border border-dark rounded shadow py-3 px-1 text-white text-opacity-75 my-3">
                        Statues
                    </h5>
                    <div class="text-start row fs-3">
                        <div class="col-6">
                            @Html.LabelFor(modelItem => Model.Request.RequestStatus,new {@class = "text-uppercase fs-4 text-white text-opacity-75 fw-bold"})
                        </div>
                        <div class="col-6 fs-5">
                            @Html.EditorFor(modelItem => Model.Request.RequestStatus,  new { htmlAttributes = new { @class = "form-control text-center",  @readonly = "readonly" } })
                        </div>
                    </div>
                    @if(Model.Request.RequestStatus.ToLower() == "onprogress")
                    {
                        <div class="text-start row fs-3">
                            <div class="col-6">
                                @Html.LabelFor(modelItem => Model.Request.CurrentDepartment.DepartmentName,new {@class = "text-uppercase fs-4 text-white text-opacity-75 fw-bold"})
                            </div>
                            <div class="col-6">
                                @Html.EditorFor(modelItem => Model.Request.CurrentDepartment.DepartmentName,  new { htmlAttributes = new { @class = "form-control text-center",  @readonly = "readonly" } })
                            </div>
                        </div>
                    }
                    else
                    {
                        if (Model.Request.RequestStatus.ToLower() == "rejected")
                        {
                            <div class="text-start row fs-3">
                                <div class="col-6">
                                    <lable class="text-uppercase fs-4 text-white text-opacity-75 fw-bold">Rejected By</lable>
                                </div>
                                <div class="col-6">
                                    @Html.EditorFor(modelItem => Model.RejectedBy.DepartmentName,  new { htmlAttributes = new { @class = "form-control text-center",  @readonly = "readonly" } })
                                </div>
                            </div>
                        }

                        <div class="text-start row fs-3">
                            <div class="col-6">
                                <lable class="text-uppercase fs-4 text-white text-opacity-75 fw-bold">Finish Date</lable>
                            </div>
                            <div class="col-6">
                                @{string finishdate = Model.FinishDate?.ToString("dd/MM/yyyy");}

                                <label class="form-control text-center ">@finishdate</label>
                            </div>
                        </div>
                    }
                    
                    <div class=" text-start row fs-3 mt-3">
                        @Html.ActionLink("Back", "RequestsStatues",new {}, new { @class="fw-bold btn btn-lg btn-outline-light w-25 m-auto"})
                    </div>
                </div>
            </div>

        </form>
    </div>
</div>
